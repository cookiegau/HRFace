// Generated by Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
#ifndef FACECORE_SWIFT_H
#define FACECORE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="FaceCore",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif



@class DetectInfo;
@class FaceInfo;
@class DataIO;
enum ModelType : NSInteger;
@class UIImage;
enum DrawFace : NSInteger;
enum Orientation : NSInteger;

SWIFT_CLASS("_TtC8FaceCore17CTBCFaceDetection")
@interface CTBCFaceDetection : NSObject
@property (nonatomic, strong) DetectInfo * _Nullable detect_info;
@property (nonatomic, copy) NSArray<FaceInfo *> * _Nullable recognition_list;
@property (nonatomic, readonly, strong) DataIO * _Nullable data_io;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)setNameCountWithThreshold:(NSInteger)threshold;
- (void)setMatchCountWithThreshold:(NSInteger)threshold;
- (void)setTempCountWithThreshold:(NSInteger)threshold;
- (void)setHoldSecondWithThreshold:(NSInteger)threshold;
- (void)setTrackingMatchWithIs_tracking:(BOOL)is_tracking threshold:(double)threshold;
- (void)setLogUrlWithSend_log:(BOOL)send_log url:(NSString * _Nonnull)url;
- (void)setRequestTimeoutWithSec:(double)sec;
- (void)setHappyThresholdWithThreshold:(double)threshold;
- (void)setLivingThresholdWithThreshold:(double)threshold;
- (void)setHappyCountWithThreshold:(NSInteger)threshold;
- (void)setSmileDetectWithIs_activate:(BOOL)is_activate;
- (void)setLivingDetectWithIs_activate:(BOOL)is_activate;
- (void)setLivingCountWithThreshold:(NSInteger)threshold;
- (void)setModelTypeWithModel_type:(enum ModelType)model_type;
- (void)checkSmileWithCheck:(BOOL)check;
- (void)setDeviceIDWithId:(NSString * _Nonnull)id;
- (NSString * _Nonnull)addWithSource_image:(UIImage * _Nonnull)source_image name:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (FaceInfo * _Nonnull)create_userWithSource_image:(UIImage * _Nonnull)source_image name:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)addWithFeature:(NSArray<NSNumber *> * _Nonnull)feature name:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (FaceInfo * _Nonnull)detectImageWithSource_image:(UIImage * _Nonnull)source_image draw_face:(enum DrawFace)draw_face orientation:(enum Orientation)orientation min_size:(NSInteger)min_size SWIFT_WARN_UNUSED_RESULT;
- (void)detectWithServiceWithSource_image:(UIImage * _Nonnull)source_image draw_face:(enum DrawFace)draw_face orientation:(enum Orientation)orientation min_size:(NSInteger)min_size max_iou:(double)max_iou min_iou:(double)min_iou;
- (void)detectWithServiceDepthWithSource_image:(UIImage * _Nonnull)source_image depth_image:(UIImage * _Nonnull)depth_image draw_face:(enum DrawFace)draw_face orientation:(enum Orientation)orientation min_size:(NSInteger)min_size max_iou:(double)max_iou min_iou:(double)min_iou;
@end


SWIFT_PROTOCOL("_TtP8FaceCore25CTBCFaceDetectionDelegate_")
@protocol CTBCFaceDetectionDelegate
@optional
- (void)recognized:(FaceInfo * _Nonnull)info;
- (void)found:(FaceInfo * _Nonnull)info;
- (void)timeout:(FaceInfo * _Nonnull)info;
- (void)unknow:(FaceInfo * _Nonnull)info;
- (void)happy:(FaceInfo * _Nonnull)info;
- (void)living:(FaceInfo * _Nonnull)info;
@end

@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("ClockInLog")
@interface ClockInLog : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface ClockInLog (SWIFT_EXTENSION(FaceCore))
@property (nonatomic) BOOL clock_in;
@property (nonatomic, copy) NSDate * _Nullable clock_in_time;
@property (nonatomic) BOOL correct;
@property (nonatomic, copy) NSData * _Nullable face_img;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable feature;
@property (nonatomic, copy) NSString * _Nullable id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDate * _Nullable rec_create_time;
@property (nonatomic, copy) NSData * _Nullable rec_face_img;
@end


SWIFT_CLASS("_TtC8FaceCore6DataIO")
@interface DataIO : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8FaceCore10DetectInfo")
@interface DetectInfo : NSObject
@property (nonatomic, copy) NSArray<FaceInfo *> * _Nullable face_list;
@property (nonatomic, strong) UIImage * _Nullable origin_image;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


typedef SWIFT_ENUM(NSInteger, DrawFace, closed) {
  DrawFaceNo = 0,
  DrawFaceRectangle = 1,
  DrawFacePoints = 2,
  DrawFaceRectangle_points = 3,
};


SWIFT_CLASS("_TtC8FaceCore14FaceClockInLog")
@interface FaceClockInLog : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSNumber;
@class NSString;

SWIFT_CLASS("_TtC8FaceCore8FaceInfo")
@interface FaceInfo : NSObject
@property (nonatomic, strong) NSNumber * _Nullable x1;
@property (nonatomic, strong) NSNumber * _Nullable y1;
@property (nonatomic, strong) NSNumber * _Nullable x2;
@property (nonatomic, strong) NSNumber * _Nullable y2;
@property (nonatomic, copy) NSArray<NSArray<NSNumber *> *> * _Nullable ppoint;
@property (nonatomic, strong) NSNumber * _Nullable area;
@property (nonatomic, strong) UIImage * _Nullable croped;
@property (nonatomic, strong) UIImage * _Nullable depth;
@property (nonatomic, strong) UIImage * _Nullable alignment;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable feature;
@property (nonatomic, strong) NSString * _Nullable name;
@property (nonatomic, strong) NSString * _Nullable id;
@property (nonatomic, strong) NSString * _Nullable uuid;
@property (nonatomic) BOOL is_living;
@property (nonatomic) BOOL is_clock_in;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8FaceCore10FaceRecLog")
@interface FaceRecLog : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8FaceCore12FaceResource")
@interface FaceResource : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("Features")
@interface Features : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class User;

@interface Features (SWIFT_EXTENSION(FaceCore))
@property (nonatomic, copy) NSDate * _Nullable create_time;
@property (nonatomic, copy) NSString * _Nullable feature_id;
@property (nonatomic, copy) NSData * _Nullable image;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable resource;
@property (nonatomic, strong) User * _Nullable user;
@end


typedef SWIFT_ENUM(NSInteger, ModelType, closed) {
  ModelTypeTiny = 0,
  ModelTypeNormal = 1,
};





typedef SWIFT_ENUM(NSInteger, Orientation, closed) {
  OrientationNormal = 0,
  OrientationMirror = 1,
};


SWIFT_CLASS_NAMED("RecLog")
@interface RecLog : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface RecLog (SWIFT_EXTENSION(FaceCore))
@property (nonatomic) BOOL correct;
@property (nonatomic, copy) NSData * _Nullable face_img;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable feature;
@property (nonatomic, copy) NSString * _Nullable id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDate * _Nullable rec_create_time;
@property (nonatomic, copy) NSData * _Nullable rec_face_img;
@property (nonatomic, copy) NSDate * _Nullable rec_time;
@property (nonatomic) int32_t status;
@end


/// Class which implements the various <code>URLSessionDelegate</code> methods to connect various Alamofire features.
SWIFT_CLASS("_TtC8FaceCore15SessionDelegate")
@interface SessionDelegate : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURLSession;

@interface SessionDelegate (SWIFT_EXTENSION(FaceCore)) <NSURLSessionDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
@end

@class NSURLSessionDataTask;
@class NSCachedURLResponse;

@interface SessionDelegate (SWIFT_EXTENSION(FaceCore)) <NSURLSessionDataDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask willCacheResponse:(NSCachedURLResponse * _Nonnull)proposedResponse completionHandler:(void (^ _Nonnull)(NSCachedURLResponse * _Nullable))completionHandler;
@end

@class NSURLSessionDownloadTask;

@interface SessionDelegate (SWIFT_EXTENSION(FaceCore)) <NSURLSessionDownloadDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didResumeAtOffset:(int64_t)fileOffset expectedTotalBytes:(int64_t)expectedTotalBytes;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
@end

@class NSURLSessionTask;
@class NSURLAuthenticationChallenge;
@class NSURLCredential;
@class NSInputStream;
@class NSHTTPURLResponse;
@class NSURLSessionTaskMetrics;

@interface SessionDelegate (SWIFT_EXTENSION(FaceCore)) <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didSendBodyData:(int64_t)bytesSent totalBytesSent:(int64_t)totalBytesSent totalBytesExpectedToSend:(int64_t)totalBytesExpectedToSend;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task needNewBodyStream:(void (^ _Nonnull)(NSInputStream * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didFinishCollectingMetrics:(NSURLSessionTaskMetrics * _Nonnull)metrics;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session taskIsWaitingForConnectivity:(NSURLSessionTask * _Nonnull)task SWIFT_AVAILABILITY(watchos,introduced=4.0) SWIFT_AVAILABILITY(tvos,introduced=11.0) SWIFT_AVAILABILITY(ios,introduced=11.0) SWIFT_AVAILABILITY(macos,introduced=10.13);
@end






SWIFT_CLASS_NAMED("User")
@interface User : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class NSSet;

@interface User (SWIFT_EXTENSION(FaceCore))
- (void)addFeaturesObject:(Features * _Nonnull)value;
- (void)removeFeaturesObject:(Features * _Nonnull)value;
- (void)addFeatures:(NSSet * _Nonnull)values;
- (void)removeFeatures:(NSSet * _Nonnull)values;
@end


@interface User (SWIFT_EXTENSION(FaceCore))
@property (nonatomic, copy) NSDate * _Nullable create_time;
@property (nonatomic, copy) NSData * _Nullable face_img;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable feature;
@property (nonatomic, copy) NSString * _Nullable id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) NSSet * _Nullable features;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
